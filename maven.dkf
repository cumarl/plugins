# ===== Stage 1: Builder =====
FROM alpine:latest AS builder

ARG TERRAFORM_VERSION=1.10.0
ARG MAVEN_VERSION=3.9.4

# Install dependencies
# curl, unzip, ca-certificates, gnupg: for fetching and verifying packages
# tar: for extracting Maven
# nodejs, npm: to provide Node.js and npm
# docker-cli: Docker CLI from Alpine repos
RUN apk add --no-cache \
    curl \
    unzip \
    ca-certificates \
    gnupg \
    tar \
    nodejs \
    npm 

# Install Terraform
RUN curl -fsSL "https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip" -o terraform.zip \
    && unzip terraform.zip \
    && mv terraform /usr/local/bin/terraform \
    && rm terraform.zip

# Install Maven
RUN curl -fsSL https://downloads.apache.org/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz -o maven.tar.gz \
    && tar -xzf maven.tar.gz -C /opt \
    && ln -s /opt/apache-maven-${MAVEN_VERSION} /opt/maven \
    && rm maven.tar.gz

ENV PATH="$PATH:/opt/maven/bin"

# Update npm to latest
RUN npm install -g npm@latest

# ===== Stage 2: Final Image =====
FROM jenkins/inbound-agent:jdk17

USER root

# Copy Terraform, Maven, Node, npm, and Docker CLI from builder
COPY --from=builder /usr/local/bin/terraform /usr/local/bin/terraform
COPY --from=builder /opt/maven /opt/maven
COPY --from=builder /usr/bin/node /usr/bin/node
COPY --from=builder /usr/bin/npm /usr/bin/npm

# Create a symbolic link for 'mvn'
RUN ln -s /opt/maven/bin/mvn /usr/local/bin/mvn

USER jenkins
ENV PATH="$PATH:/opt/maven/bin"

